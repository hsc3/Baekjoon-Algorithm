# [2467] 용액 | Gold 5 | 투 포인터
'''
KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다. 산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.
같은 양의 두 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다. 이 연구소에서는 같은 양의 두 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다. 
참고로, 두 종류의 알칼리성 용액만으로나 혹은 두 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.
산성 용액과 알칼리성 용액의 특성값이 정렬된 순서로 주어졌을 때, 이 중 두 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액을 찾는 프로그램을 작성하시오.
'''
import sys
input = sys.stdin.readline

N = int(input())
X = list(map(int, input().split())) # 용액의 농도

left = 0
right = N - 1
answer = [0, 0]

minimum = float("inf") # 두 용액의 최소 특성값
while left < right:
    value = X[left] + X[right] # 두 용액의 특성값
    if abs(value) < minimum: # 최소 특성값보다 작은 경우, 값을 저장한다.
        minimum = abs(value)
        answer = [X[left], X[right]]

    # 최대한 0에 가까운 특성값을 만들도록 포인터를 이동시킨다.
    if value > 0: # 특성값이 양수인 경우 -> right -= 1
        right -= 1
    elif value < 0: # 특성값이 음수인 경우 -> left += 1
        left += 1
    else: # 특성값이 0인 경우 -> 탐색 종료
        break

print(*answer)
