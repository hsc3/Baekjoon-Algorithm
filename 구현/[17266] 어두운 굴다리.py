# [17266] 어두운 굴다리 | Silver 4 | 구현
'''
겁쟁이 상빈이는 길이 조금이라도 어둡다면 가지 않는다. 따라서 굴다리로 가면 최단거리로 집까지 갈수 있지만, 굴다리는 어둡기 때문에 빙빙 돌아서 집으로 간다.
안타깝게 여긴 인식이는 굴다리 모든 길 0~N을 밝히게 가로등을 설치해 달라고 인천광역시에 민원을 넣었다.
인천광역시에서 가로등을 설치할 개수 M과 각 가로등의 위치 x들의 결정을 끝냈다. 그리고 각 가로등은 높이만큼 주위를 비출 수 있다.
하지만 갑자기 예산이 부족해진 인천광역시는 가로등의 높이가 높을수록 가격이 비싸지기 때문에 최소한의 높이로 굴다리 모든 길 0~N을 밝히고자 한다.
최소한의 예산이 들 높이를 구하자. 단 가로등은 모두 높이가 같아야 하고, 정수이다.
'''
import sys
input = sys.stdin.readline

N = int(input())
M = int(input())
X = list(map(int, input().split()))

answer = max(X[0], N-X[-1]) # 첫 가로등이 왼쪽과 마지막 가로등이 오른쪽을 비춰야하는 거리
for i in range(M-1):
    distance = X[i+1] - X[i] # 두 가로등 사이의 거리
    if distance % 2 == 1: # 사이 거리가 홀수인 경우, 1칸을 더 비추어야 한다.
        height = distance // 2 + 1
    else:
        height = distance // 2 # 사이 거리가 짝수인 경우, 절반만큼만 비추면 된다.
    answer = max(answer, height)

print(answer)

''' ex
10
2
0 9 -> distance = (9 - 0) // 2 + 1 = 5 <홀수>
0 1 2 3 4 5 6 7 8 9
-----------
          ---------

11 
2 
0 10 -> distance = (10 - 0) // 2 = 5 <짝수>
0 1 2 3 4 5 6 7 8 9 10
-----------
          ------------
'''