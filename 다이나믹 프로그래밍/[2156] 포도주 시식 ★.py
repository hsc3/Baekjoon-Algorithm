# [2156] 포도주 시식 | Silver 1 | 다이나믹 프로그래밍
'''
효주는 포도주 시식회에 갔다. 그 곳에 갔더니, 테이블 위에 다양한 포도주가 들어있는 포도주 잔이 일렬로 놓여 있었다. 효주는 포도주 시식을 하려고 하는데, 여기에는 다음과 같은 두 가지 규칙이 있다.
1. 포도주 잔을 선택하면 그 잔에 들어있는 포도주는 모두 마셔야 하고, 마신 후에는 원래 위치에 다시 놓아야 한다.
2. 연속으로 놓여 있는 3잔을 모두 마실 수는 없다.

효주는 될 수 있는 대로 많은 양의 포도주를 맛보기 위해서 어떤 포도주 잔을 선택해야 할지 고민하고 있다. 1부터 n까지의 번호가 붙어 있는 n개의 포도주 잔이 순서대로 테이블 위에 놓여 있고,
각 포도주 잔에 들어있는 포도주의 양이 주어졌을 때, 효주를 도와 가장 많은 양의 포도주를 마실 수 있도록 하는 프로그램을 작성하시오.
'''
import sys
input = sys.stdin.readline

N = int(input())
grape = [0] + [int(input()) for _ in range(N)]

dp = [0 for _ in range(N+1)]
dp[1] = grape[1]
if N >= 2:
    dp[2] = grape[1] + grape[2]

# 경우의 수
# 1. i를 마시는 경우
#   1.1. i-1과 연속으로 마신다.
#   1.2. i-1를 마시지 않는다.
# 2. i를 마시지 않는 경우 -> i-1의 결과를 그대로 가지고 온다.

for i in range(3, N+1):
    dp[i] = max(dp[i-3] + grape[i-1] + grape[i], # 1.1
                dp[i-1], # 2
                dp[i-2] + grape[i]) # 1.2

print(dp[N])