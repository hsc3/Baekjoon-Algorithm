'''
[10844] 쉬운 계단 수 / Silver 1 / 다이나믹 프로그래밍
45656이란 수를 보자. 이 수는 인접한 모든 자리의 차이가 1이다. 이런 수를 계단 수라고 한다.
N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지 구해보자. 0으로 시작하는 수는 계단수가 아니다.
'''
mod = 1000000000
N = int(input()) # 길이

dp = [[1,1,1,1,1,1,1,1,1,1,0] for _ in range(N)]

'''
숫자를 나열해보면 이전 자리수에 만든 숫자들을 어떻게 재사용할 수 있을지에 대한 규칙을 찾을 수 있다.
|  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  -  |
|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|
|  1  |  1  |  1  |  1  |  1  |  1  |  1  |  1  |  1  |  1  |  0  | => 9
|  1  |  2  |  2  |  2  |  2  |  2  |  2  |  2  |  2  |  1  |  0  | => 17
|  2  |  3  |  4  |  4  |  4  |  4  |  4  |  4  |  3  |  2  |  0  | => 32                                
'''

for i in range(1, N):
    for j in range(1, 10):
        dp[i][j] = (dp[i-1][j-1]%mod + dp[i-1][j+1]%mod)
    dp[i][0] = dp[i-1][1]

print(sum(dp[N-1][1:])%mod)

